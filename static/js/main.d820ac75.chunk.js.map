{"version":3,"sources":["assets/campaign.png","components/styled-input/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","StyledInput","typeCharacter","passedClass","className","props","brackets","lowerBound","upperBound","baseCost","rate","Number","POSITIVE_INFINITY","formatNumber","number","negative","i","numberString","String","resultArray","j","length","unshift","slice","join","App","handleAddWorker","e","preventDefault","setState","workerItemCount","state","workerItems","type","salary","selectOpen","handleFieldChange","k","field","currentTarget","value","handleOpenSelect","prevSelectState","handleTypeSelection","target","handleExpenditure","currentExpenditure","handleRemoveWorker","rest","handleSubmit","errors","totalPayroll","expenditureForPayrollTax","Set","numberMatch","match","add","projectedExpenditure","Object","keys","reduce","acc","el","currentWorker","currentBracket","parseInt","percentage","Math","round","size","savings","payrollTax","toFixed","step","handleReturn","clearForm","1","handleExport","csvData","values","map","item","omit","ws","XLSX","json_to_sheet","width","sheet_add_json","origin","wb","Sheets","SheetNames","excelBuffer","bookType","data","Blob","FileSaver","this","src","campaign","alt","onSubmit","onClick","key","onChange","placeholder","error","React","Component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d820ac75.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/campaign.07aa0cad.png\";","import './style.css';\nimport React from 'react';\n\nconst StyledInput = ({ typeCharacter, className: passedClass, ...props }) => (\n  <div className={`styled-input ${passedClass} ${typeCharacter && 'with-type-character'}`}>\n    {typeCharacter &&\n      <span className=\"type-character\">{typeCharacter}</span>\n    }\n    <input\n      {...props}\n    />\n  </div>\n);\n\n\nexport default StyledInput;\n","import React from 'react';\nimport './App.css';\nimport StyledInput from './components/styled-input';\nimport campaign from './assets/campaign.png';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport { omit } from 'lodash';\n\nconst brackets = [\n  {lowerBound: 0, upperBound: 24999, baseCost: 0, rate: 0},\n  {lowerBound: 25000, upperBound: 49999, baseCost: 0, rate: .138},\n  {lowerBound: 50000, upperBound: 74999, baseCost: 3450, rate: .169},\n  {lowerBound: 75000, upperBound: 99999, baseCost: 7675, rate: .184},\n  {lowerBound: 100000, upperBound: 199999, baseCost: 12275, rate: .216},\n  {lowerBound: 200000, upperBound: Number.POSITIVE_INFINITY, baseCost: 33875, rate: .246}\n]\n\nconst formatNumber = number => {\n  let negative;\n  if (number < 0) {\n    number = -number;\n    negative = true;\n  }\n  const numberString = String(number);\n  const resultArray = [];\n  let i;\n  for (let j = numberString.length; j >= 1; j -=3) {\n    i = j - 3 < 0 ? 0 : j - 3;\n    resultArray.unshift(numberString.slice(i,j));\n  }\n  if (negative) resultArray[0] = '-' + resultArray[0].slice(0);\n  return resultArray.join(\",\");\n}\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      step: 1,\n      workerItemCount: 1,\n      workerItems: {\n        1: { number: 1, type: 'Employee', salary: '', selectOpen: false }\n      },\n      currentExpenditure: \"\",\n      projectedExpenditure: \"\",\n      errors: []\n    }\n  }\n\n  handleAddWorker = (e) => {\n    e.preventDefault();\n    this.setState({\n      workerItemCount: this.state.workerItemCount + 1,\n      workerItems: {\n        ...this.state.workerItems,\n        [this.state.workerItemCount + 1]: { number: 1, type: 'Employee', salary: '', selectOpen: false }\n      }\n    });\n  }\n\n  handleFieldChange = (k, field) => e => {\n    const { workerItems } = this.state;\n    this.setState({ workerItems: { ...workerItems, [k]: { ...workerItems[k], [field]: e.currentTarget.value } } })\n  }\n\n  handleOpenSelect = k => e => {\n    const { workerItems } = this.state;\n    const prevSelectState = workerItems[k].selectOpen;\n    this.setState({ workerItems: { ...workerItems, [k]: { ...workerItems[k], selectOpen: !prevSelectState } } })\n  }\n\n  handleTypeSelection = k => e => {\n    const { workerItems } = this.state;\n    this.setState({ workerItems: { ...workerItems, [k]: { ...workerItems[k], type: e.target.type, selectOpen: false } } })\n  }\n\n  handleExpenditure = e => {\n    this.setState({ currentExpenditure: e.currentTarget.value });\n  }\n\n  handleRemoveWorker = k => e => {\n    const { workerItemCount, workerItems: {[k]: deleteItem, ...rest } } = this.state;\n    this.setState({\n      workerItemCount: workerItemCount - 1,\n      workerItems: rest\n    });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.setState({ errors: [] })\n    const { workerItems, currentExpenditure } = this.state;\n    let totalPayroll = 0;\n    let expenditureForPayrollTax = 0;\n    let errors = new Set();\n    const numberMatch = /^[0-9]+$/;\n    if (currentExpenditure === \"\" || !currentExpenditure.match(numberMatch)) errors.add('Current expenditure must contain valid amount.');\n    const projectedExpenditure = Object.keys(workerItems).reduce((acc, el) => {\n      const currentWorker = workerItems[el];\n      if (currentWorker.number === \"\" || !String(currentWorker.number).match(numberMatch)) errors.add('Number of workers must contain valid number.');\n      if (currentWorker.salary === \"\" || !currentWorker.salary.match(numberMatch)) errors.add('Income must contain valid amount.');\n      let baseCost, rate, lowerBound;\n      for (let i = 0; i < brackets.length; i++) {\n        const currentBracket = brackets[i];\n        if ((currentWorker.salary <= currentBracket.upperBound) && (currentWorker.salary >= currentBracket.lowerBound)) {\n          baseCost = currentBracket.baseCost;\n          rate = currentBracket.rate;\n          lowerBound = currentBracket.lowerBound;\n          break;\n        }\n      }\n      totalPayroll += parseInt(currentWorker.salary);\n      const percentage = currentWorker.type === \"Employee\" ? .8 : 1;\n      expenditureForPayrollTax += currentWorker.number * (baseCost + (currentWorker.salary - lowerBound) * rate);\n      return Math.round(acc + currentWorker.number * ((baseCost + (currentWorker.salary - lowerBound) * rate) * percentage));\n    }, 0)\n    if (errors.size) {\n      this.setState({ errors: [...errors] })\n    } else {\n      this.setState({\n        projectedExpenditure,\n        totalPayroll,\n        savings: currentExpenditure - projectedExpenditure,\n        payrollTax: `${(expenditureForPayrollTax / totalPayroll * 100).toFixed(2)}%`,\n        step: 2\n      })\n    }\n  }\n\n  handleReturn = e => {\n    e.preventDefault();\n    this.setState({ step: 1 })\n  }\n\n  clearForm = e => {\n    e.preventDefault();\n    this.setState({\n      workerItemCount: 1,\n      workerItems: {\n        1: { number: 1, type: 'Employee', salary: '', selectOpen: false }\n      },\n      currentExpenditure: \"\",\n      projectedExpenditure: \"\",\n      errors: []\n    });\n  }\n\n  handleExport = () => {\n    const { workerItems, totalPayroll, currentExpenditure, projectedExpenditure, payrollTax, savings } = this.state;\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n    const fileExtension = '.xlsx';\n    const csvData = Object.values(workerItems).map(item => omit(item, ['selectOpen']));\n    const ws = XLSX.utils.json_to_sheet(csvData);\n    ws['!cols'] = [{ width: 10 }, { width: 20 }, { width: 20 }];\n    XLSX.utils.sheet_add_json(ws, [{ '': '' }], { origin: -1 });\n    XLSX.utils.sheet_add_json(ws, [{ 'Total Payroll': `$${formatNumber(totalPayroll)}` }], { origin: -1 });\n    XLSX.utils.sheet_add_json(ws, [{ '': '' }], { origin: -1 });\n    XLSX.utils.sheet_add_json(ws, [{ 'Current Healthcare Expenditure': `$${formatNumber(currentExpenditure)}` }], { origin: -1 });\n    XLSX.utils.sheet_add_json(ws, [{ '': '' }], { origin: -1 });\n    XLSX.utils.sheet_add_json(ws, [{ 'Projected Expenditure': `$${formatNumber(projectedExpenditure)}` }], { origin: -1 });\n    XLSX.utils.sheet_add_json(ws, [{ '': '' }], { origin: -1 });\n    XLSX.utils.sheet_add_json(ws, [{ 'Savings': `$${formatNumber(savings)}` }], { origin: -1 });\n    XLSX.utils.sheet_add_json(ws, [{ '': '' }], { origin: -1 });\n    XLSX.utils.sheet_add_json(ws, [{ 'Effective Tax Rate': payrollTax }], { origin: -1 });\n    XLSX.utils.sheet_add_json(ws, [{ '': '' }], { origin: -1 });\n    const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n    const data = new Blob([excelBuffer], {type: fileType});\n    FileSaver.saveAs(data, 'NY Health Act Business Results' + fileExtension);\n  }\n\n  render() {\n    const { workerItems, step, currentExpenditure, projectedExpenditure, totalPayroll, savings, payrollTax, errors } = this.state;\n    return (\n      <div className=\"App\">\n        <div className=\"content\">\n          <div className=\"header\">\n            <img src={campaign} alt=\"campaign\"/>\n            <div>Business Savings Calculator</div>\n          </div>\n          {step === 1 &&\n            <form onSubmit={this.handleSubmit}>\n              <div className=\"intro\">\n                This is a calculator to help you estimate how much you would save on your business's healthcare coverage expenses\n                under the NY Health Act compared to what you pay today.\n              </div>\n              <h3>I. Personnel Annual Income, Salaries, and Wages</h3>\n              <div className=\"instructions\">Please enter all annual income for current personnel. Enter the number of people\n              who are receiving each income level, choose type \"Owner\", or \"Employee\" from the drop-down menu,\n              and enter the income with no commas or spaces. Click \"Add Income Level\" for additional entries.</div>\n            <button className=\"add-worker\" onClick={this.handleAddWorker}>Add Income Level</button>\n              {Object.keys(workerItems).map(k => {\n                return (\n                  <div className=\"worker-item\" key={k}>\n                    <div className=\"worker-number\">\n                      <StyledInput\n                        value={workerItems[k]['number']}\n                        onChange={this.handleFieldChange(k, 'number')}\n                        placeholder='#'\n                      />\n                    </div>\n                    <div className=\"worker-type\">\n                      <div onClick={this.handleOpenSelect(k)}>\n                        <span className=\"select-value\">\n                          {`${workerItems[k]['type']} (${workerItems[k]['type'] === 'Employee' ? '80%' : '100%'})`}\n                        </span>\n                        <span>&#9660;</span>\n                      </div>\n                      {workerItems[k].selectOpen && (\n                        <ul className=\"dropdown\" onClick={this.handleTypeSelection(k)}>\n                          <li type=\"Employee\">Employee (80%)</li>\n                          <li type=\"Owner\">Owner (100%)</li>\n                        </ul>\n                      )}\n                    </div>\n                    <div className=\"worker-salary-item\">\n                      <StyledInput\n                        className=\"worker-salary\"\n                        value={workerItems[k]['salary']}\n                        onChange={this.handleFieldChange(k, 'salary')}\n                        placeholder='Enter Income'\n                        typeCharacter='$'\n                      />\n                      {k !== '1' &&\n                        <div className=\"remove-worker\" onClick={this.handleRemoveWorker(k)}>\n                          x\n                        </div>\n                      }\n                    </div>\n                  </div>\n                )\n              })}\n              <h3>II. Current Annual Healthcare Expenditure</h3>\n              <div className=\"instructions\">\n                Please enter an estimate of all expenses put toward employee healthcare annually (no commas or spaces).\n                Don't forget to incude costs of time spent on evaluation, administration and maintenance.\n              </div>\n              <StyledInput\n                className=\"current-expenditure\"\n                value={this.state.currentExpenditure}\n                onChange={this.handleExpenditure}\n                placeholder='Enter Expenditure'\n                typeCharacter='$'\n              />\n              <div className=\"action-buttons\">\n                <input type=\"submit\" value=\"Submit\"/>\n                <button className=\"clear-form\" onClick={this.clearForm}>Clear Form</button>\n              </div>\n              <ul className=\"errors\">\n                {errors.map(error => {\n                  return (\n                    <li>{error}</li>\n                  )\n                })}\n              </ul>\n            </form>\n          }\n          {step === 2 &&\n            <div className=\"results\">\n              <div>Here's how much you currently spend on payroll annually: <b>{`$${formatNumber(totalPayroll)}`}</b></div>\n              <div>Here's how much you currently spend on your business's healthcare coverage annually: <b>{`$${formatNumber(currentExpenditure)}`}</b></div>\n              <div>Here's how much you would spend annually for your business's healthcare coverage under the NY Health Act: <b>{`$${formatNumber(projectedExpenditure)}`}</b></div>\n              <div>Here's how much you would save: <b>{`$${formatNumber(savings)}`}</b></div>\n              <div>Here's what your effective tax rate for healthcare would be under the NY Health Act: <b>{payrollTax}</b></div>\n              <div className=\"result-buttons\">\n                <button className=\"return\" onClick={this.handleReturn}>Return to Form</button>\n                <button className=\"export\" onClick={this.handleExport}>Export</button>\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}